(()=>{"use strict";const e=document.getElementById("btn-notification"),n=e.getElementsByTagName("img")[0];function o(e){let n=(e+"=".repeat((4-e.length%4)%4)).replace(/\-/g,"+").replace(/_/g,"/"),o=window.atob(n),t=new Uint8Array(o.length);for(let e=0;e<o.length;++e)t[e]=o.charCodeAt(e);return t}"serviceWorker"in navigator?navigator.serviceWorker.register("./sw.min.js").then((function(e){console.log("Registration successful, scope is:",e.scope)})).catch((function(e){console.log("Service worker registration failed, error:",e)})):console.log("Service workers are not supported."),fetch("/api/posts?limit=20").then((function(e){return e.json()})).then((function(e){for(let n of e){let e=document.querySelector("template").content.cloneNode(!0);const o=new Date(n.posted_at);e.querySelector("#date").innerText=o.toLocaleString("en-US",{year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"numeric"}),e.querySelector("img").src=n.photo_url,e.querySelector("article").setAttribute("post-id",n.post_id),document.querySelector(".container").appendChild(e)}})),"Notification"in window&&"serviceWorker"in navigator?(e.addEventListener("click",(function(){Notification.requestPermission((async e=>{"granted"===e?await async function(){try{let e=await navigator.serviceWorker.ready,t=await e.pushManager.getSubscription();if(null!==t)return n.src="icons/notification.png",await t.unsubscribe(),void console.log("SUBSCRIPTION: removing");n.src="icons/notification-full.png",t=await e.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:o("BKvPLsLUmpFn4uApO81fP1vDZfuKL3Q7eki6lp4t-g1f38vHNqQ0MmvlWeqSVBOK5U3gvCprmf6Sj1414GAXgkI")}),console.log(JSON.stringify(t)),(await fetch("/api/subscriptions",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({sub:t})})).ok?console.log("SUBSCRIPTION: granted"):(console.log("SUBSCRIPTION: failed because res is not ok"),n.src="icons/notification.png",await t.unsubscribe())}catch(e){console.log(e)}}():console.log("PUSH: user denied push notifications")}))})),navigator.serviceWorker.ready.then((e=>{e.pushManager.getSubscription().then((e=>{n.src=null===e?"icons/notification.png":"icons/notification-full.png",console.log(`Sub is ${e}`)}))}))):(console.log("PUSH: Notifications are not available"),e.style.backgroundColor="#a0c0e0")})();